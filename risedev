#!/usr/bin/env bash

if [ -z "$(which cargo-binstall)" ] && [ -z "$RISINGWAVE_CI" ]; then
    echo "Installing cargo-binstall..."
    curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
fi

if [ -z "$(which cargo-make)" ]; then
    echo "Installing cargo-make..."
    cargo binstall cargo-make@~0.37 --locked
fi

touch risedev-components.user.env

# RISEDEV_CMD might be set if it is installed to the PATH.
# Otherwise, we set it to the current script name.
if [ -z "$RISEDEV_CMD" ]; then
    export RISEDEV_CMD="$0"
fi

if [ $# -eq 0 ] || [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
    cargo make --list-all-steps --hide-uninteresting
    exit 0
fi

# Direct shortcut for running SLT tests in CI, bypassing cargo-make
# if [ "$1" == "slt" ]; then
#     shift # Remove the slt argument

#     # Load environment variables from risedev-env if it exists
#     RC_ENV_FILE=".risingwave/config/risedev-env"
#     if [ -f "${RC_ENV_FILE}" ]; then
#         echo "Loading environment variables from ${RC_ENV_FILE}"
#         # Export all variables from RC_ENV_FILE
#         set -a  # automatically export all variables
#         source "${RC_ENV_FILE}"
#         set +a  # disable auto-export
#     else
#         echo "${RC_ENV_FILE} not found, have you launched the cluster with risedev?"
#         exit 1
#     fi

#     # Set up environment variables for sqllogictest
#     export SLT_HOST="${RISEDEV_RW_FRONTEND_LISTEN_ADDRESS:-127.0.0.1}"
#     export SLT_PORT="${RISEDEV_RW_FRONTEND_PORT:-4566}"
#     export SLT_DB="dev"
#     export PATH="$(pwd)/e2e_test/commands:${PATH}"
#     export RUST_BACKTRACE="0" # slt backtrace is useless
#     export RUST_LOG="sqllogictest=warn,sqllogictest::system_command=info"

#     # Execute sqllogictest directly with all arguments
#     echo "Running sqllogictest directly with provided arguments"
#     sqllogictest "$@"
#     exit $?
# fi

cargo make --silent --allow-private configure-if-not-configured
# We marked many tasks as private, so we can have a more concise output when listing all tasks.
# But we allow private tasks to be executed.
cargo make --allow-private "$@"
