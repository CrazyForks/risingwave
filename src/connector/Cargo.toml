[package]
name = "risingwave_connector"
version = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
keywords = { workspace = true }
license = { workspace = true }
repository = { workspace = true }

[dependencies]
anyhow = { workspace = true }
apache-avro = { workspace = true }
assert_matches = { workspace = true }
async-compression = { workspace = true, features = ["gzip", "tokio"] }
async-nats = { workspace = true }
async-trait = { workspace = true }
auto_enums = { workspace = true }
auto_impl = { workspace = true }
await-tree = { workspace = true }
aws-config = { workspace = true }
aws-credential-types = { workspace = true }
aws-msk-iam-sasl-signer = { workspace = true }
aws-sdk-dynamodb = { workspace = true }
aws-sdk-emrserverless = { workspace = true }
aws-sdk-glue = { workspace = true }
aws-sdk-kinesis = { workspace = true }
aws-sdk-s3 = { workspace = true }
aws-smithy-runtime-api = { workspace = true }
aws-smithy-types = { workspace = true }
aws-smithy-types-convert = { workspace = true, features = ["convert-chrono"] }
aws-types = { workspace = true }
base64 = { workspace = true }
byteorder = { workspace = true }
bytes = { workspace = true, features = ["serde"] }
cfg-or-panic = { workspace = true }
chrono = { workspace = true, features = ["clock", "std"] }
clickhouse = { workspace = true, features = ["time"] }
csv = { workspace = true }
deltalake = { workspace = true }
duration-str = { workspace = true }
easy-ext = { workspace = true }
either = { workspace = true }
elasticsearch = { workspace = true, features = ["rustls-tls"] }
enum-as-inner = { workspace = true }
futures = { workspace = true, features = ["alloc"] }
futures-async-stream = { workspace = true }
gcp-bigquery-client = { workspace = true }
glob = { workspace = true }
google-cloud-bigquery = { workspace = true, features = ["auth"] }
google-cloud-gax = { workspace = true }
google-cloud-googleapis = { workspace = true, features = ["pubsub", "bigquery"] }
google-cloud-pubsub = { workspace = true }
iceberg = { workspace = true }
iceberg-catalog-glue = { workspace = true }
iceberg-catalog-rest = { workspace = true }
indexmap = { workspace = true, features = ["serde"] }
itertools = { workspace = true }
jni = { workspace = true, features = ["invocation"] }
maplit = { workspace = true }
moka = { workspace = true, features = ["future"] }
mongodb = { workspace = true, features = ["tokio-runtime"] }
mysql_async = { workspace = true }
mysql_common = { workspace = true, features = ["chrono"] }
nexmark = { workspace = true, features = ["serde"] }
num-bigint = { workspace = true }
opendal = { workspace = true, features = [
    "executors-tokio",
    "services-azblob",
    "services-fs",
    "services-gcs",
    "services-memory",
    "services-s3",
    "services-webhdfs",
] }
opensearch = { workspace = true, features = ["rustls-tls"] }
openssl = { workspace = true }
parking_lot = { workspace = true }
parquet = { workspace = true }
paste = { workspace = true }
pg_bigdecimal = { workspace = true }
postgres-openssl = { workspace = true }
prometheus = { workspace = true, features = ["process"] }
prost = { workspace = true, features = ["no-recursion-limit"] }
prost-reflect = { workspace = true, features = ["serde"] }
prost-types = { workspace = true }
pulsar = { workspace = true, features = ["tokio-runtime", "telemetry", "auth-oauth2", "lz4", "zstd"] }
rdkafka = { workspace = true, features = [
    "cmake-build",
    "ssl",
    "gssapi",
    "zstd",
] }
redis = { workspace = true, features = ["aio", "tokio-comp", "async-std-comp","cluster-async","geospatial"] }
regex = { workspace = true }
reqwest = { workspace = true, features = ["json", "stream"] }
risingwave_common = { workspace = true }
risingwave_common_estimate_size = { workspace = true }
risingwave_common_rate_limit = { workspace = true }
risingwave_connector_codec = { workspace = true }
risingwave_jni_core = { workspace = true }
risingwave_meta_model = { workspace = true }
risingwave_pb = { workspace = true }
risingwave_rpc_client = { workspace = true }
rumqttc = { workspace = true, features = ["url"] }
rust_decimal = { workspace = true }
rustls-native-certs = { workspace = true }
rustls-pemfile = { workspace = true }
rustls-pki-types = { workspace = true }
rw_futures_util = { workspace = true }
scopeguard = { workspace = true }
sea-orm = { workspace = true }
sea-schema = { workspace = true, features = ["discovery", "sqlx-postgres", "sqlx-mysql"] }
serde = { workspace = true, features = ["derive", "rc"] }
serde_derive = { workspace = true }
serde_json = { workspace = true }
serde_with = { workspace = true, features = ["json"] }
simd-json = { workspace = true, features = ["hints"] }
smallvec = { workspace = true }
sqlx = { workspace = true }
strum = { workspace = true }
strum_macros = { workspace = true }
tempfile = { workspace = true }
thiserror = { workspace = true }
thiserror-ext = { workspace = true }
# To easiy get the type_name and impl IntoSql for rust_decimal, we fork the crate.
# Another reason is that we are planning to refactor their IntoSql trait to allow specifying the type to convert.
tiberius = { workspace = true, features = ["chrono", "sql-browser-tokio", "rustls", "rust_decimal", "bigdecimal", "tds73", "time"] }
time = { workspace = true }
tokio = { version = "0.2", package = "madsim-tokio", features = [
    "rt",
    "rt-multi-thread",
    "sync",
    "macros",
    "time",
    "signal",
    "fs",
] }
tokio-postgres = { workspace = true, features = ["with-uuid-1"] }
tokio-retry = { workspace = true }
tokio-stream = { workspace = true }
tokio-util = { workspace = true, features = ["codec", "io"] }
tonic = { workspace = true }
tracing = { workspace = true }
typed-builder = { workspace = true }
url = { workspace = true }
urlencoding = { workspace = true }
uuid = { workspace = true, features = ["v4", "fast-rng"] }
with_options = { workspace = true }
yup-oauth2 = { workspace = true }

[target.'cfg(not(madsim))'.dependencies]
workspace-hack = { path = "../workspace-hack" }

[dev-dependencies]
assert_matches = { workspace = true }
criterion = { workspace = true, features = ["async_tokio", "async"] }
deltalake = { workspace = true }
expect-test = { workspace = true }
fs-err = { workspace = true }
paste = { workspace = true }
pretty_assertions = { workspace = true }
proc-macro2 = { workspace = true }
quote = { workspace = true }
rand = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_yaml = { workspace = true }
syn = { version = "2", features = ["full"] }
tempfile = { workspace = true }
tracing-subscriber = { workspace = true }
tracing-test = { workspace = true }
walkdir = { workspace = true }

[[bench]]
name = "debezium_json_parser"
harness = false

[[bench]]
name = "nexmark_integration"
harness = false

[[bench]]
name = "json_parser_case_insensitive"
harness = false

[[bench]]
name = "json_vs_plain_parser"
harness = false

[lints]
workspace = true
