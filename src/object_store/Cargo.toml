[package]
name = "risingwave_object_store"
version = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
keywords = { workspace = true }
license = { workspace = true }
repository = { workspace = true }

[package.metadata.cargo-machete]
ignored = ["aws-credential-types"]

[dependencies]
async-trait = { workspace = true }
await-tree = { workspace = true }
aws-config = { workspace = true }
# add the dependency explicitly to enable hardcoded-credentials feature
aws-credential-types = { workspace = true }
aws-sdk-s3 = { version = "0.5", package = "madsim-aws-sdk-s3" }
aws-smithy-http = { workspace = true }
aws-smithy-runtime = { workspace = true }
aws-smithy-runtime-api = { workspace = true }
aws-smithy-types = { workspace = true }
bytes = { workspace = true, features = ["serde"] }
crc32fast = { workspace = true }
fail = { workspace = true }
futures = { workspace = true, features = ["alloc"] }
hyper = { version = "0.14", features = ["tcp", "client"] }                    # TODO(http-bump): required by aws sdk
hyper-rustls = { workspace = true, features = ["webpki-roots"] }
itertools = { workspace = true }
madsim = { workspace = true }
opendal = { workspace = true, features = [
    "executors-tokio",
    "services-azblob",
    "services-fs",
    "services-gcs",
    "services-memory",
    "services-obs",
    "services-oss",
    "services-s3",
    "services-webhdfs",
    "services-azfile",
] }
prometheus = { workspace = true, features = ["process"] }
reqwest = { workspace = true } # required by opendal
risingwave_common = { workspace = true }
risingwave_jni_core = { workspace = true, optional = true }
spin = { workspace = true }
thiserror = { workspace = true }
thiserror-ext = { workspace = true }
tokio = { version = "0.2", package = "madsim-tokio", features = ["fs"] }
tokio-retry = { workspace = true }
tracing = { workspace = true }
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lints]
workspace = true
# This crate is excluded from hakari (see hakari.toml) after hdfs is introduced...## [target.'cfg(not(madsim))'.dependencies]
# workspace-hack = { path = "../workspace-hack" }
#
#
#
#

# [features]
# hdfs-backend = ["opendal/services-hdfs", "dep:risingwave_jni_core"]
