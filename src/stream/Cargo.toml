[package]
name = "risingwave_stream"
version = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
keywords = { workspace = true }
license = { workspace = true }
repository = { workspace = true }

[features]
dhat-heap = ["dhat"]
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = { workspace = true }
async-recursion = { workspace = true }
async-stream = { workspace = true }
async-trait = { workspace = true }
auto_enums = { workspace = true }
await-tree = { workspace = true }
bytes = { workspace = true }
cfg-if = { workspace = true }
delta_btree_map = { workspace = true }
dhat = { workspace = true, optional = true }
educe = { workspace = true }
either = { workspace = true }
enum-as-inner = { workspace = true }
fail = { workspace = true }
foyer = { workspace = true }
futures = { workspace = true, features = ["alloc"] }
futures-async-stream = { workspace = true }
hytra = { workspace = true }
itertools = { workspace = true }
jsonbb = { workspace = true }
local_stats_alloc = { workspace = true }
lru = { workspace = true }
maplit = { workspace = true }
memcomparable = { workspace = true }
multimap = { workspace = true }
parking_lot = { workspace = true }
pin-project = { workspace = true }
prehash = { workspace = true }
prometheus = { workspace = true, features = ["process"] }
prost = { workspace = true }
rand = { workspace = true }
risingwave_common = { workspace = true }
risingwave_common_estimate_size = { workspace = true }
risingwave_common_rate_limit = { workspace = true }
risingwave_connector = { workspace = true }
risingwave_dml = { workspace = true }
risingwave_expr = { workspace = true }
risingwave_hummock_sdk = { workspace = true }
risingwave_pb = { workspace = true }
risingwave_rpc_client = { workspace = true }
risingwave_storage = { workspace = true }
rw_futures_util = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
smallvec = { workspace = true }
static_assertions = { workspace = true }
strum_macros = { workspace = true }
thiserror = { workspace = true }
thiserror-ext = { workspace = true }
tokio = { version = "0.2", package = "madsim-tokio", features = [
  "rt",
  "rt-multi-thread",
  "sync",
  "macros",
  "time",
  "signal",
  "fs",
] }
tokio-metrics = { workspace = true }
tokio-retry = { workspace = true }
tokio-stream = { workspace = true }
tonic = { workspace = true }
tracing = { workspace = true }
url = { workspace = true }

[dev-dependencies]
assert_matches = { workspace = true }
criterion = { workspace = true, features = ["async_tokio", "async"] }
expect-test = { workspace = true }
pretty_assertions = { workspace = true }
risingwave_expr_impl = { workspace = true }
risingwave_hummock_sdk = { workspace = true }
risingwave_hummock_test = { workspace = true, features = ["test"] }
serde_yaml = { workspace = true }
tracing-subscriber = { workspace = true }
tracing-test = { workspace = true }

[target.'cfg(not(madsim))'.dependencies]
workspace-hack = { path = "../workspace-hack" }

[[bench]]
name = "stream_hash_agg"
harness = false

[[bench]]
name = "bench_state_table"
harness = false

[[bench]]
name = "stream_hash_join_rt"
harness = false

[[bench]]
name = "stream_hash_join_mem"
harness = false

[lints]
workspace = true
